{"ast":null,"code":"'use strict';\n\nconst zlib = require('zlib');\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst {\n  kStatusCode\n} = require('./constants');\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n    this.params = null;\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n    this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n      this._deflate.close();\n      this._deflate = null;\n      if (callback) {\n        callback(new Error('The deflate stream was closed while data was being processed'));\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find(params => {\n      if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === 'number' && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {\n        return false;\n      }\n      return true;\n    });\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n      delete accepted.client_max_window_bits;\n    }\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n    if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === 'number' && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n      throw new Error('Unexpected or invalid parameter \"client_max_window_bits\"');\n    }\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach(params => {\n      Object.keys(params).forEach(key => {\n        let value = params[key];\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n        value = value[0];\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n          }\n          value = num;\n        } else if (key === 'client_no_context_takeover' || key === 'server_no_context_takeover') {\n          if (value !== true) {\n            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n        params[key] = value;\n      });\n    });\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add(done => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add(done => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n    this._inflate[kCallback] = callback;\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n      const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number' ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n      this._deflate.on('data', deflateOnData);\n    }\n    this._deflate[kCallback] = callback;\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n      let data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n      callback(null, data);\n    });\n  }\n}\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n  if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}","map":{"version":3,"names":["zlib","require","bufferUtil","Limiter","kStatusCode","TRAILER","Buffer","from","kPerMessageDeflate","Symbol","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","PerMessageDeflate","constructor","options","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","undefined","_isServer","_deflate","_inflate","params","concurrency","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","configurations","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","Error","offers","opts","accepted","find","response","forEach","Object","keys","key","value","length","num","Number","isInteger","TypeError","decompress","data","fin","add","done","_decompress","err","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","inflateOnError","inflateOnData","write","flush","concat","_readableState","endEmitted","reset","createDeflateRaw","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","slice","module","exports","chunk","push","RangeError","code","removeListener"],"sources":["C:/Users/sanjeevi/Desktop/chatapp/chatapp_frontend/node_modules/engine.io/node_modules/ws/lib/permessage-deflate.js"],"sourcesContent":["'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}