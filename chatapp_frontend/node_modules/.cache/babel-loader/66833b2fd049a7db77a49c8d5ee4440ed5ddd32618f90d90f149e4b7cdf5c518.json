{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodePacket = void 0;\nconst commons_js_1 = require(\"./commons.js\");\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return commons_js_1.ERROR_PACKET;\n  }\n  return encodedPacket.length > 1 ? {\n    type: commons_js_1.PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: commons_js_1.PACKET_TYPES_REVERSE[type]\n  };\n};\nexports.decodePacket = decodePacket;\nconst decodeBase64Packet = (data, binaryType) => {\n  if (withNativeArrayBuffer) {\n    const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      if (data instanceof Blob) {\n        // from WebSocket + binaryType \"blob\"\n        return data;\n      } else {\n        // from HTTP long-polling or WebTransport\n        return new Blob([data]);\n      }\n    case \"arraybuffer\":\n    default:\n      if (data instanceof ArrayBuffer) {\n        // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n        return data;\n      } else {\n        // from WebTransport (Uint8Array)\n        return data.buffer;\n      }\n  }\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","decodePacket","commons_js_1","require","base64_arraybuffer_js_1","withNativeArrayBuffer","ArrayBuffer","encodedPacket","binaryType","type","data","mapBinary","charAt","decodeBase64Packet","substring","packetType","PACKET_TYPES_REVERSE","ERROR_PACKET","length","decoded","decode","base64","Blob","buffer"],"sources":["C:/Users/sanjeevi/Desktop/chatapp/chatapp_frontend/node_modules/engine.io-parser/build/cjs/decodePacket.browser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodePacket = void 0;\nconst commons_js_1 = require(\"./commons.js\");\nconst base64_arraybuffer_js_1 = require(\"./contrib/base64-arraybuffer.js\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = commons_js_1.PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return commons_js_1.ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: commons_js_1.PACKET_TYPES_REVERSE[type]\n        };\n};\nexports.decodePacket = decodePacket;\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = (0, base64_arraybuffer_js_1.decode)(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,iCAAiC,CAAC;AAC1E,MAAME,qBAAqB,GAAG,OAAOC,WAAW,KAAK,UAAU;AAC/D,MAAML,YAAY,GAAGA,CAACM,aAAa,EAAEC,UAAU,KAAK;EAChD,IAAI,OAAOD,aAAa,KAAK,QAAQ,EAAE;IACnC,OAAO;MACHE,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEC,SAAS,CAACJ,aAAa,EAAEC,UAAU;IAC7C,CAAC;EACL;EACA,MAAMC,IAAI,GAAGF,aAAa,CAACK,MAAM,CAAC,CAAC,CAAC;EACpC,IAAIH,IAAI,KAAK,GAAG,EAAE;IACd,OAAO;MACHA,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEG,kBAAkB,CAACN,aAAa,CAACO,SAAS,CAAC,CAAC,CAAC,EAAEN,UAAU;IACnE,CAAC;EACL;EACA,MAAMO,UAAU,GAAGb,YAAY,CAACc,oBAAoB,CAACP,IAAI,CAAC;EAC1D,IAAI,CAACM,UAAU,EAAE;IACb,OAAOb,YAAY,CAACe,YAAY;EACpC;EACA,OAAOV,aAAa,CAACW,MAAM,GAAG,CAAC,GACzB;IACET,IAAI,EAAEP,YAAY,CAACc,oBAAoB,CAACP,IAAI,CAAC;IAC7CC,IAAI,EAAEH,aAAa,CAACO,SAAS,CAAC,CAAC;EACnC,CAAC,GACC;IACEL,IAAI,EAAEP,YAAY,CAACc,oBAAoB,CAACP,IAAI;EAChD,CAAC;AACT,CAAC;AACDV,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnC,MAAMY,kBAAkB,GAAGA,CAACH,IAAI,EAAEF,UAAU,KAAK;EAC7C,IAAIH,qBAAqB,EAAE;IACvB,MAAMc,OAAO,GAAG,CAAC,CAAC,EAAEf,uBAAuB,CAACgB,MAAM,EAAEV,IAAI,CAAC;IACzD,OAAOC,SAAS,CAACQ,OAAO,EAAEX,UAAU,CAAC;EACzC,CAAC,MACI;IACD,OAAO;MAAEa,MAAM,EAAE,IAAI;MAAEX;IAAK,CAAC,CAAC,CAAC;EACnC;AACJ,CAAC;AACD,MAAMC,SAAS,GAAGA,CAACD,IAAI,EAAEF,UAAU,KAAK;EACpC,QAAQA,UAAU;IACd,KAAK,MAAM;MACP,IAAIE,IAAI,YAAYY,IAAI,EAAE;QACtB;QACA,OAAOZ,IAAI;MACf,CAAC,MACI;QACD;QACA,OAAO,IAAIY,IAAI,CAAC,CAACZ,IAAI,CAAC,CAAC;MAC3B;IACJ,KAAK,aAAa;IAClB;MACI,IAAIA,IAAI,YAAYJ,WAAW,EAAE;QAC7B;QACA,OAAOI,IAAI;MACf,CAAC,MACI;QACD;QACA,OAAOA,IAAI,CAACa,MAAM;MACtB;EACR;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}