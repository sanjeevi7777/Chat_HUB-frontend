{"ast":null,"code":"import { gapi, gapiComplete } from './gapiScript';\n\n/**\r\n * Function to load gapi auth2 from a gapi that you provied\r\n * Check full docs here: https://developers.google.com/identity/sign-in/web/reference#auth_setup\r\n * @param {Object} gapiScript gapi script object\r\n * @param {string} clientId Your google clientID string\r\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\r\n */\nconst loadAuth2 = async function (gapiScript, clientId, scopes) {\n  return new Promise(resolve => {\n    gapiScript.load('auth2', () => {\n      resolve(gapiScript.auth2.init({\n        client_id: clientId,\n        scope: scopes\n      }));\n    });\n  });\n};\n\n/**\r\n * Function to init gapi auth2 with props\r\n * @param {Object} gapiScript gapi script object\r\n * @param {*} props Possible props to init gapi auth2, check the options on google docs: https://developers.google.com/identity/sign-in/web/reference#gapiauth2clientconfig\r\n */\nconst loadAuth2WithProps = async function (gapiScript, props) {\n  return new Promise(resolve => {\n    gapiScript.load('auth2', () => {\n      resolve(gapiScript.auth2.init(props));\n    });\n  });\n};\n\n/**\r\n *\r\n * @param {Object} gapiScript gapi script object\r\n * @param {string} clientId Your google clientID string\r\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\r\n */\nconst loadClientAuth2 = async function (gapiScript, clientId, scopes) {\n  return new Promise(resolve => {\n    gapiScript.load('client', () => {\n      resolve(gapiScript.client.init({\n        client_id: clientId,\n        scope: scopes\n      }));\n    });\n    gapiScript.load('auth2', () => {\n      resolve(gapiScript.client.init({\n        client_id: clientId,\n        scope: scopes\n      }));\n    });\n  });\n};\n\n/**\r\n * A very special function to load the gapi inside the DOM, directly.\r\n * So it'll load the real and most recent gapi-scrip from google and attach to DOM:\r\n * let gapi = loadGapiInsideDOM();\r\n * Now you can use it anywhere.\r\n */\nconst loadGapiInsideDOM = async function () {\n  return new Promise(resolve => {\n    const element = document.getElementsByTagName('script')[0];\n    const js = document.createElement('script');\n    js.id = 'google-platform';\n    js.src = '//apis.google.com/js/platform.js';\n    js.async = true;\n    js.defer = true;\n    element.parentNode.insertBefore(js, element);\n    js.onload = async () => {\n      resolve(window.gapi);\n    };\n  });\n};\nexport { gapi, gapiComplete, loadAuth2, loadAuth2WithProps, loadClientAuth2, loadGapiInsideDOM };","map":{"version":3,"names":["gapi","gapiComplete","loadAuth2","gapiScript","clientId","scopes","Promise","resolve","load","auth2","init","client_id","scope","loadAuth2WithProps","props","loadClientAuth2","client","loadGapiInsideDOM","element","document","getElementsByTagName","js","createElement","id","src","async","defer","parentNode","insertBefore","onload","window"],"sources":["C:/Users/velus/Documents/Chat_HUB-frontend/chatapp_frontend/node_modules/gapi-script/index.js"],"sourcesContent":["import { gapi, gapiComplete } from './gapiScript';\r\n\r\n/**\r\n * Function to load gapi auth2 from a gapi that you provied\r\n * Check full docs here: https://developers.google.com/identity/sign-in/web/reference#auth_setup\r\n * @param {Object} gapiScript gapi script object\r\n * @param {string} clientId Your google clientID string\r\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\r\n */\r\nconst loadAuth2 = async function (gapiScript, clientId, scopes) {\r\n  return new Promise(resolve => {\r\n    gapiScript.load('auth2', () => {\r\n      resolve(gapiScript.auth2.init({\r\n        client_id: clientId,\r\n        scope: scopes\r\n      }));\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Function to init gapi auth2 with props\r\n * @param {Object} gapiScript gapi script object\r\n * @param {*} props Possible props to init gapi auth2, check the options on google docs: https://developers.google.com/identity/sign-in/web/reference#gapiauth2clientconfig\r\n */\r\nconst loadAuth2WithProps = async function (gapiScript, props) {\r\n  return new Promise(resolve => {\r\n    gapiScript.load('auth2', () => {\r\n      resolve(gapiScript.auth2.init(props));\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} gapiScript gapi script object\r\n * @param {string} clientId Your google clientID string\r\n * @param {Array.<string[]>} scopes The scopes to request, as a space-delimited string. Optional if fetch_basic_profile is not set to false. Check possible scopes on google docs: https://developers.google.com/identity/protocols/oauth2/scopes\r\n */\r\nconst loadClientAuth2 = async function (gapiScript, clientId, scopes) {\r\n  return new Promise(resolve => {\r\n      gapiScript.load('client', () => {\r\n          resolve(gapiScript.client.init({\r\n              client_id: clientId,\r\n              scope: scopes\r\n          }));\r\n      });\r\n      gapiScript.load('auth2', () => {\r\n          resolve(gapiScript.client.init({\r\n              client_id: clientId,\r\n              scope: scopes\r\n          }));\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * A very special function to load the gapi inside the DOM, directly.\r\n * So it'll load the real and most recent gapi-scrip from google and attach to DOM:\r\n * let gapi = loadGapiInsideDOM();\r\n * Now you can use it anywhere.\r\n */\r\nconst loadGapiInsideDOM = async function () {\r\n  return new Promise(resolve => {\r\n    const element = document.getElementsByTagName('script')[0];\r\n    const js = document.createElement('script');\r\n    js.id = 'google-platform';\r\n    js.src = '//apis.google.com/js/platform.js';\r\n    js.async = true;\r\n    js.defer = true;\r\n    element.parentNode.insertBefore(js, element);\r\n    js.onload = async () => {\r\n      resolve(window.gapi);\r\n    }\r\n  });\r\n}\r\n\r\nexport {\r\n  gapi,\r\n  gapiComplete,\r\n  loadAuth2,\r\n  loadAuth2WithProps,\r\n  loadClientAuth2,\r\n  loadGapiInsideDOM,\r\n};\r\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,YAAY,QAAQ,cAAc;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG,eAAAA,CAAgBC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC9D,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC5BJ,UAAU,CAACK,IAAI,CAAC,OAAO,EAAE,MAAM;MAC7BD,OAAO,CAACJ,UAAU,CAACM,KAAK,CAACC,IAAI,CAAC;QAC5BC,SAAS,EAAEP,QAAQ;QACnBQ,KAAK,EAAEP;MACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMQ,kBAAkB,GAAG,eAAAA,CAAgBV,UAAU,EAAEW,KAAK,EAAE;EAC5D,OAAO,IAAIR,OAAO,CAACC,OAAO,IAAI;IAC5BJ,UAAU,CAACK,IAAI,CAAC,OAAO,EAAE,MAAM;MAC7BD,OAAO,CAACJ,UAAU,CAACM,KAAK,CAACC,IAAI,CAACI,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,eAAAA,CAAgBZ,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EACpE,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;IAC1BJ,UAAU,CAACK,IAAI,CAAC,QAAQ,EAAE,MAAM;MAC5BD,OAAO,CAACJ,UAAU,CAACa,MAAM,CAACN,IAAI,CAAC;QAC3BC,SAAS,EAAEP,QAAQ;QACnBQ,KAAK,EAAEP;MACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACFF,UAAU,CAACK,IAAI,CAAC,OAAO,EAAE,MAAM;MAC3BD,OAAO,CAACJ,UAAU,CAACa,MAAM,CAACN,IAAI,CAAC;QAC3BC,SAAS,EAAEP,QAAQ;QACnBQ,KAAK,EAAEP;MACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMY,iBAAiB,GAAG,eAAAA,CAAA,EAAkB;EAC1C,OAAO,IAAIX,OAAO,CAACC,OAAO,IAAI;IAC5B,MAAMW,OAAO,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,MAAMC,EAAE,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;IAC3CD,EAAE,CAACE,EAAE,GAAG,iBAAiB;IACzBF,EAAE,CAACG,GAAG,GAAG,kCAAkC;IAC3CH,EAAE,CAACI,KAAK,GAAG,IAAI;IACfJ,EAAE,CAACK,KAAK,GAAG,IAAI;IACfR,OAAO,CAACS,UAAU,CAACC,YAAY,CAACP,EAAE,EAAEH,OAAO,CAAC;IAC5CG,EAAE,CAACQ,MAAM,GAAG,YAAY;MACtBtB,OAAO,CAACuB,MAAM,CAAC9B,IAAI,CAAC;IACtB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,SACEA,IAAI,EACJC,YAAY,EACZC,SAAS,EACTW,kBAAkB,EAClBE,eAAe,EACfE,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}